$date
	Sun May 10 12:55:19 2015
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module BancoPruebas $end
$var wire 1 ! Clock $end
$var wire 1 " Reset $end
$var wire 1 # oA_Sel $end
$var wire 1 $ oAdd_Sel $end
$var wire 1 % oB_Sel $end
$var wire 1 & oProduct_Sel $end
$var wire 1 ' oShift $end
$var wire 64 ( product [63:0] $end
$var wire 1 ) wAck $end
$var wire 1 * wValidData $end
$var wire 1 + wiLSB $end
$var reg 32 , dataA [31:0] $end
$var reg 32 - dataB [31:0] $end
$scope module control1 $end
$var wire 1 ! Clock $end
$var wire 1 " Reset $end
$var wire 1 ) iAck $end
$var wire 1 + iLSB $end
$var wire 1 * iValid_Data $end
$var reg 1 . oA_Sel $end
$var reg 1 / oAdd_Sel $end
$var reg 1 0 oB_Sel $end
$var reg 1 1 oProduct_Sel $end
$var reg 1 2 oShift $end
$var reg 1 3 rCountReset $end
$var reg 6 4 rCounter [5:0] $end
$var reg 2 5 rCurrentState [1:0] $end
$var reg 2 6 rNextState [1:0] $end
$upscope $end
$scope module p1 $end
$var wire 1 ) acknowledge $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 * validdata $end
$scope module r1 $end
$var reg 1 7 clk $end
$upscope $end
$scope module rs $end
$var reg 1 8 rst $end
$upscope $end
$scope module a1 $end
$var reg 1 9 acknowledge $end
$upscope $end
$scope module d1 $end
$var reg 1 : validdata $end
$upscope $end
$upscope $end
$scope module data1 $end
$var wire 64 ; Add_Out [63:0] $end
$var wire 1 ! Clock $end
$var wire 32 < Data_A [31:0] $end
$var wire 32 = Data_B [31:0] $end
$var wire 32 > Mux_A_Out [31:0] $end
$var wire 32 ? Mux_B_Out [31:0] $end
$var wire 64 @ Mux_Prod_Out [63:0] $end
$var wire 64 A Product [63:0] $end
$var wire 32 B Reg_A_Out [31:0] $end
$var wire 32 C Reg_B_Out [31:0] $end
$var wire 1 " Reset $end
$var wire 1 ' Shift_Enable $end
$var wire 32 D Shifted_A [31:0] $end
$var wire 32 E Shifted_B [31:0] $end
$var wire 64 F Sum_Prod [63:0] $end
$var wire 1 # a_sel $end
$var wire 1 G add_sel $end
$var wire 1 % b_sel $end
$var wire 1 & prod_sel $end
$var reg 64 H Prod [63:0] $end
$var reg 1 I oB_LSB $end
$scope module Mux_B $end
$var wire 32 J Data_A [31:0] $end
$var wire 32 K Data_B [31:0] $end
$var wire 1 % Select $end
$var reg 32 L Out [31:0] $end
$upscope $end
$scope module Reg_B $end
$var wire 1 ! Clock $end
$var wire 32 M D [31:0] $end
$var wire 1 N Enable $end
$var wire 1 " Reset $end
$var reg 32 O Q [31:0] $end
$upscope $end
$scope module Shift_B $end
$var wire 32 P Data [31:0] $end
$var wire 1 ' Enable $end
$var reg 32 Q Shifted_Data [31:0] $end
$upscope $end
$scope module Mux_A $end
$var wire 32 R Data_A [31:0] $end
$var wire 32 S Data_B [31:0] $end
$var wire 1 # Select $end
$var reg 32 T Out [31:0] $end
$upscope $end
$scope module Reg_A $end
$var wire 1 ! Clock $end
$var wire 32 U D [31:0] $end
$var wire 1 V Enable $end
$var wire 1 " Reset $end
$var reg 32 W Q [31:0] $end
$upscope $end
$scope module Shift_A $end
$var wire 32 X Data [31:0] $end
$var wire 1 ' Enable $end
$var reg 32 Y Shifted_Data [31:0] $end
$upscope $end
$scope module Mux_Prod1 $end
$var wire 64 Z Data_A [63:0] $end
$var wire 64 [ Data_B [63:0] $end
$var wire 1 & Select $end
$var reg 64 \ Out [63:0] $end
$upscope $end
$scope module Reg_Prod $end
$var wire 1 ! Clock $end
$var wire 64 ] D [63:0] $end
$var wire 1 ^ Enable $end
$var wire 1 " Reset $end
$var reg 64 _ Q [63:0] $end
$upscope $end
$scope module Adder_Prod $end
$var wire 32 ` Data_A [31:0] $end
$var wire 64 a Data_B [63:0] $end
$var reg 64 b Result [63:0] $end
$upscope $end
$scope module Mux_Prod0 $end
$var wire 64 c Data_A [63:0] $end
$var wire 64 d Data_B [63:0] $end
$var wire 1 G Select $end
$var reg 64 e Out [63:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx e
bx d
bx c
bx b
bx a
bx `
bx _
1^
bx ]
bx \
b0 [
bx Z
bx Y
bx X
bx W
1V
bx U
bx T
b1010 S
bx R
bx Q
bx P
bx O
1N
bx M
bx L
b1010101010101010101 K
bx J
xI
bx H
zG
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
b1010101010101010101 =
b1010 <
bx ;
0:
09
08
07
b0 6
bx 5
bx 4
x3
x2
x1
x0
x/
x.
b1010101010101010101 -
b1010 ,
x+
0*
0)
bx (
x'
x&
x%
x$
x#
0"
0!
$end
#2000
18
1"
#250000
0I
0+
b0 b
b0 ;
b0 c
b0 H
b0 (
b0 a
b0 d
b0 O
b0 C
b0 P
b0 W
b0 B
b0 X
b0 `
b0 _
b0 A
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx L
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ?
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx M
bx0 T
bx0 >
bx0 U
bx0 Y
bx0 D
bx0 R
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx Q
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx E
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx J
0/
0$
01
0&
00
0%
0.
0#
02
0'
13
b0 5
17
1!
#500000
07
0!
#502000
08
0"
#750000
xI
x+
bx H
bx (
bx a
bx d
bx b
bx ;
bx c
bx _
bx A
bx0 W
bx0 B
bx0 X
bx0 `
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx O
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx C
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx P
b0 4
17
1!
#1000000
07
0!
#1250000
17
1!
#1500000
07
0!
#1750000
17
1!
#2000000
07
0!
#2250000
17
1!
#2500000
03
b1 6
07
0!
1:
1*
#2750000
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx Q
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx E
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx J
bx00 Y
bx00 D
bx00 R
b0 \
b0 @
b0 ]
b1010101010101010101 L
b1010101010101010101 ?
b1010101010101010101 M
b1010 T
b1010 >
b1010 U
1/
1$
12
1'
11
1&
10
1%
1.
1#
b1 4
b1 5
17
1!
#3000000
07
0!
0:
0*
#3250000
1I
1+
b1010 b
b1010 ;
b1010 c
b0 H
b0 (
b0 a
b0 d
b10 4
b1010101010101010101 O
b1010101010101010101 C
b1010101010101010101 P
b1010 W
b1010 B
b1010 X
b1010 `
b0 _
b0 A
17
1!
#3500000
07
0!
#3750000
b11 4
17
1!
#4000000
07
0!
#4250000
b100 4
17
1!
#4500000
07
0!
#4750000
b101 4
17
1!
#5000000
07
0!
#5250000
b110 4
17
1!
#5500000
07
0!
#5750000
b111 4
17
1!
#6000000
07
0!
#6250000
b1000 4
17
1!
#6500000
07
0!
#6750000
b1001 4
17
1!
#7000000
07
0!
#7250000
b1010 4
17
1!
#7500000
07
0!
#7750000
b1011 4
17
1!
#8000000
07
0!
#8250000
b1100 4
17
1!
#8500000
07
0!
#8750000
b1101 4
17
1!
#9000000
07
0!
#9250000
b1110 4
17
1!
#9500000
07
0!
#9750000
b1111 4
17
1!
#10000000
07
0!
#10250000
b10000 4
17
1!
#10500000
07
0!
#10750000
b10001 4
17
1!
#11000000
07
0!
#11250000
b10010 4
17
1!
#11500000
07
0!
#11750000
b10011 4
17
1!
#12000000
07
0!
#12250000
b10100 4
17
1!
#12500000
07
0!
#12750000
b10101 4
17
1!
#13000000
07
0!
#13250000
b10110 4
17
1!
#13500000
07
0!
#13750000
b10111 4
17
1!
#14000000
07
0!
#14250000
b11000 4
17
1!
#14500000
07
0!
#14750000
b11001 4
17
1!
#15000000
07
0!
#15250000
b11010 4
17
1!
#15500000
07
0!
#15750000
b11011 4
17
1!
#16000000
07
0!
#16250000
b11100 4
17
1!
#16500000
07
0!
#16750000
b11101 4
17
1!
#17000000
07
0!
#17250000
b11110 4
17
1!
#17500000
07
0!
#17750000
b11111 4
17
1!
#18000000
07
0!
#18250000
13
b10 6
b100000 4
17
1!
#18500000
07
0!
#18750000
b10100 Y
b10100 D
b10100 R
b101010101010101010 Q
b101010101010101010 E
b101010101010101010 J
0/
0$
02
0'
b0 4
b10 5
17
1!
#19000000
07
0!
#19250000
17
1!
#19500000
07
0!
#19750000
17
1!
#20000000
07
0!
#20250000
17
1!
#20500000
07
0!
#20750000
17
1!
#21000000
07
0!
#21250000
17
1!
#21500000
07
0!
#21750000
17
1!
#22000000
07
0!
#22250000
17
1!
#22500000
07
0!
#22750000
17
1!
#23000000
07
0!
#23250000
17
1!
#23500000
07
0!
#23750000
17
1!
#24000000
07
0!
#24250000
17
1!
#24500000
07
0!
#24750000
17
1!
#25000000
b0 6
07
0!
19
1)
#25250000
bx \
bx @
bx ]
b101010101010101010 L
b101010101010101010 ?
b101010101010101010 M
b10100 T
b10100 >
b10100 U
01
0&
00
0%
0.
0#
b0 5
17
1!
#25500000
07
0!
09
0)
#25750000
0I
0+
bx H
bx (
bx a
bx d
bx b
bx ;
bx c
bx _
bx A
b10100 W
b10100 B
b10100 X
b10100 `
b101010101010101010 O
b101010101010101010 C
b101010101010101010 P
17
1!
#26000000
07
0!
#26250000
17
1!
#26500000
07
0!
#26750000
17
1!
#27000000
07
0!
#27250000
17
1!
#27500000
07
0!
#27750000
17
1!
#28000000
07
0!
#28250000
17
1!
#28500000
07
0!
#28750000
17
1!
#29000000
07
0!
#29250000
17
1!
#29500000
07
0!
#29750000
17
1!
#30000000
07
0!
#30250000
17
1!
#30500000
07
0!
#30750000
17
1!
#31000000
07
0!
#31250000
17
1!
#31500000
07
0!
#31750000
17
1!
#32000000
07
0!
#32250000
17
1!
#32500000
07
0!
#32750000
17
1!
#33000000
07
0!
#33250000
17
1!
#33500000
07
0!
#33750000
17
1!
#34000000
07
0!
#34250000
17
1!
#34500000
07
0!
#34750000
17
1!
#35000000
07
0!
